{"version":3,"sources":["components/Header.js","components/Options.js","components/Button.js","components/MainContent.js","components/Result.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","Options","option","handleOptionChange","id","type","value","text","onChange","placeholder","Button","onClick","disabled","useState","MainContent","question","options","handleQuestionChange","onSubmit","addOption","htmlFor","event","map","index","e","filter","length","Result","count","displayData","resetDisplayData","randomAnswer","i","App","setCount","setQuestion","isCorrect","setOptions","setDisplayData","showResult","setShowResult","target","newAr","preventDefault","random","Math","floor","randomIndex","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dab7c77b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"w-full \">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-gray-300 flex items-center justify-between flex-wrap p-6\">\r\n                <h1 className=\"flex items-center flex-shrink-0 text-purple-700 mr-6\">\r\n                    <a href=\"/\">\r\n                        <span className=\"logo-text font-semibold text-3xl tracking-tight\">YOUR CHOICE</span>\r\n                    </a>\r\n                </h1>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { useState } from \"react\";\r\n\r\nfunction Options({ option, handleOptionChange }) {\r\n\r\n\r\n    return (\r\n        <div className=\"options\">\r\n\r\n            <div className=\"mt-1 flex rounded-md shadow-sm\">\r\n                <span className=\"inline-flex items-center px-3 rounded-l-md border border-r-0 border-gray-300 bg-gray-50 text-gray-500 text-sm\">\r\n                    {option.id}\r\n                </span>\r\n                <input\r\n                    type=\"text\"\r\n                    value={option.text}\r\n                    onChange={handleOptionChange}\r\n                    placeholder=\"Enter an answer\"\r\n                    className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Options;","import React, { useState } from \"react\";\r\n\r\nfunction Button({ type, text, onClick, disabled }) {\r\n    const [count, setCount] = useState(0);\r\n    return (\r\n        <button\r\n            onClick={onClick}\r\n            type={type}\r\n            disabled={disabled}\r\n            className=\"inline-flex justify-center m-4 py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n        >\r\n            {text}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default Button;","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Options from \"./Options\";\r\nimport Button from \"./Button\";\r\n\r\nfunction MainContent({\r\n    question,\r\n    options,\r\n    handleQuestionChange,\r\n    handleOptionChange,\r\n    onSubmit,\r\n    addOption,\r\n}) {\r\n    const handleChange = (event) => {\r\n        handleQuestionChange(event);\r\n    };\r\n\r\n    const getDisabled = () => {\r\n        const empty = options.filter((option) => option.text == \"\");\r\n\r\n        if (empty.length || !question) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"main-content shadow sm:rounded-md sm:overflow-hidden md:grid md:grid-cols-3 md:gap-6 m-5 p-4\">\r\n            <div>\r\n                <h1 className=\"text-2xl font-medium leading-6 text-gray-900 m-2\">\r\n                    Stuck on a question?\r\n                </h1>\r\n                <p className=\"mt-2 text-base leading-6 text-gray-500\">\r\n                    We can help you find the answer to your question.\r\n                </p>\r\n            </div>\r\n            <div className=\"mt-5 md:mt-0 md:col-span-2\">\r\n                <form>\r\n                    <label\r\n                        className=\"block text-left text-gray-700 text-lg font-bold mb-2\"\r\n                        htmlFor=\"question\"\r\n                    >\r\n                        Question\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={question}\r\n                        onChange={handleChange}\r\n                        placeholder=\"Enter a question\"\r\n                        className=\"bg-gray-200 appearance-none border-2 border-gray-200 rounded w-full py-2 px-4 text-gray-700 leading-tight focus:outline-none focus:bg-white focus:border-purple-500\"\r\n                    />\r\n                    <label className=\"options__label block text-left text-gray-700 text-lg font-bold mb-2\">\r\n                        Options\r\n                    </label>\r\n                    {options.map((option, index) => {\r\n                        return (\r\n                            <Options\r\n                                key={index}\r\n                                option={option}\r\n                                index={index}\r\n                                handleOptionChange={(e) => handleOptionChange(e, option.id)}\r\n                            />\r\n                        );\r\n                    })}\r\n                    <div className=\"flex flex-col sm:flex-row justify-between\">\r\n                        <Button onClick={addOption} text=\"+ Add Option\" />{\" \"}\r\n                        <Button\r\n                            onClick={onSubmit}\r\n                            type=\"submit\"\r\n                            text=\"Answer!\"\r\n                            disabled={getDisabled()}\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainContent;","import React, { useState } from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nexport default function Result({ count, displayData, resetDisplayData, randomAnswer }) {\r\n    return (\r\n        <div>\r\n            <h4 className=\"\r\n                block text-left text-gray-700 text-lg font-bold mb-2\r\n            \">Question is: {displayData && displayData.question}</h4>\r\n            <br />\r\n            <h4 className=\"block text-left text-gray-700 text-lg font-bold mb-2\">options are:</h4> <br />\r\n            {displayData &&\r\n                displayData.options.map((option, i) => <span\r\n                    className=\"flex flex-wrap justify-center m-4 py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n                    key={i}>{option.text}</span>)}\r\n            <div className=\"flex flex-col sm:flex-row justify-between\">\r\n                <Button type=\"button\" text=\"Ask Again\" onClick={randomAnswer} />\r\n                <Button type=\"button\" text=\"Reset\" onClick={resetDisplayData} />\r\n            </div>\r\n            <p className=\"block text-left text-gray-700 text-lg font-bold mb-2\">Count: {count}</p>\r\n        </div>\r\n    );\r\n}","import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport MainContent from \"./components/MainContent\";\n\nimport \"./App.css\";\nimport Result from \"./components/Result\";\n\nfunction App() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [count, setCount] = useState(0);\n  const [question, setQuestion] = useState(\"\");\n  const [options, setOptions] = useState([\n    {\n      id: 1,\n      text: \"\",\n      isCorrect: false,\n    },\n    {\n      id: 2,\n      text: \"\",\n      isCorrect: false,\n    },\n    {\n      id: 3,\n      text: \"\",\n      isCorrect: false,\n    },\n    {\n      id: 4,\n      text: \"\",\n      isCorrect: false,\n    },\n  ]);\n  const [displayData, setDisplayData] = useState({});\n  const [showResult, setShowResult] = useState(false);\n\n  const addOption = (e) => {\n    e.preventDefault();\n    setOptions([\n      ...options,\n      {\n        id: options.length + 1,\n        text: \"\",\n        isCorrect: false,\n      },\n    ]);\n  };\n  const randomAnswer = () => {\n    let random = Math.floor(Math.random() * options.length);\n    options[random].isCorrect = true;\n    setOptions([...options]);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setShowResult(true);\n    setDisplayData({ question, options });\n    setQuestion(\"\");\n    randomAnswer();\n    setOptions([\n      {\n        id: 1,\n        text: \"\",\n        isCorrect: false,\n      },\n      {\n        id: 2,\n        text: \"\",\n        isCorrect: false,\n      },\n      {\n        id: 3,\n        text: \"\",\n        isCorrect: false,\n      },\n      {\n        id: 4,\n        text: \"\",\n        isCorrect: false,\n      },\n    ]);\n  };\n\n  const handleQuestionChange = (e) => {\n    setQuestion(e.target.value);\n  };\n\n  const handleOptionChange = (e, id) => {\n    const newAr = options.map((option) => {\n      if (option.id === id) {\n        return {\n          id: id,\n          text: e.target.value,\n          isCorrect: option.isCorrect,\n        };\n      } else {\n        return option;\n      }\n    });\n\n    setOptions(newAr);\n  };\n\n  return (\n    <div className=\"App h-full\">\n      <Header className=\"\" />\n      <MainContent\n        question={question}\n        options={options}\n        handleQuestionChange={handleQuestionChange}\n        handleOptionChange={handleOptionChange}\n        onSubmit={onSubmit}\n        addOption={addOption}\n      />\n      {showResult && (\n        <Result\n          displayData={displayData}\n          resetDisplayData={() => {\n            setDisplayData({});\n            setShowResult(false);\n          }}\n          randomAnswer={() => {\n            const randomIndex = Math.floor(Math.random() * options.length);\n            const randomOption = options[randomIndex];\n            randomOption.isCorrect = true;\n            setOptions(options);\n            setCount(count + 1);\n          }}\n        />\n      )}\n\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}